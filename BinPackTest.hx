package ;

import binpack.MaxRects;

class BinPackTest {

	static var ws = [18., 12, 20, 14, 12, 54, 26, 5, 73, 140, 13, 88, 35, 127, 18, 88, 88, 3, 190, 13, 100, 22, 3, 17, 88, 54, 17, 21, 16, 12, 22, 17, 88, 127, 20, 88, 17, 22, 132, 70, 9, 9, 12, 21, 35, 17, 17, 20, 8, 88, 22, 7, 6, 18, 13, 18, 52, 54, 17, 240, 100, 7, 729, 11, 88, 134, 8, 70, 10, 12, 30, 22, 88, 237, 7, 8, 88, 8, 79, 11, 18, 11, 1400, 73, 88, 88, 14, 12, 8, 22, 152, 18, 13, 2, 43, 20, 20, 12, 16, 76, 14, 76, 20, 17, 152, 54, 20, 7, 7, 20, 35, 3, 18, 14, 132, 190, 20, 13, 54, 7, 12, 100, 16, 11, 88, 22, 134, 21, 5, 24, 20, 24, 11, 91, 7, 88, 7, 18, 88, 17, 18, 140, 11, 16, 17, 57, 88, 14, 20, 100, 7, 11, 17, 22, 17, 6, 16, 13, 12, 100, 76, 7, 22, 146, 3, 13, 88, 88, 20, 88, 20, 21, 13, 134, 54, 314, 18, 16, 88, 17, 13, 18, 14, 127, 22, 12, 3, 79, 12, 100, 4, 13, 20, 6, 16, 132, 7, 844, 139, 13, 14, 22, 7, 88, 12, 88, 17, 11, 76, 79, 5, 5, 14, 16, 240, 88, 5, 152, 22, 142, 12, 290, 20, 8, 20, 14, 14, 18, 76, 5, 70, 18, 79, 1400, 7, 17, 14, 8, 16, 12, 9, 14, 190, 70, 76, 7, 20, 146, 79, 132, 3, 11, 35, 97, 21, 13, 17, 54, 12, 20, 16, 844, 22, 139, 11, 54, 166, 20, 20, 127, 24, 20, 190, 11, 127, 302, 17, 76, 4, 88, 76, 14, 152, 22, 79, 5, 88, 240, 7, 22, 97, 20, 20, 240, 18, 22, 5, 140, 240, 88, 142, 54, 88, 76, 35, 13, 88, 7, 26, 88, 88, 11, 13, 18, 22, 88, 7, 3, 54, 14, 7, 20, 18, 13, 2, 5, 28, 70, 7, 11, 13, 16, 20, 7, 140, 145, 16, 12, 18, 152, 20, 140, 22, 13, 18, 240, 88, 9, 5, 135, 79, 79, 154, 417, 12, 152, 16, 14, 22, 18, 3, 11, 22, 3, 43, 100, 8, 22, 127, 16, 21, 88, 140, 12, 127, 4, 20, 240, 22, 190, 7, 88, 7, 18, 88, 11, 88, 6, 35, 139, 152, 18, 13, 18, 140, 7, 88, 16, 76, 432, 20, 97, 18, 11, 17, 18, 127, 88, 13, 88, 21, 12, 442, 152, 20, 24, 76, 88, 14, 11, 26, 88, 2, 20, 18, 52, 20, 12, 14, 88, 26, 3, 7, 139, 7, 88, 20, 18, 127, 16, 292, 4, 16, 35, 12, 14, 14, 137, 24, 13, 18, 88, 152, 113, 18, 2, 57, 8, 16, 16, 14, 12, 12, 13, 3, 88, 7, 88, 140, 14, 88, 18, 7, 12, 79, 8, 134, 88, 11, 5, 18, 30, 20, 43, 43, 79, 7, 21, 145, 22, 14, 21, 13, 100, 43, 3, 7, 12, 70, 152, 127, 14, 146, 12, 7, 17, 14, 97, 142, 88, 21, 22, 22, 20, 20, 14, 20, 844, 113, 140, 24, 16, 18, 4, 20, 11, 91, 79, 14, 17, 12, 20, 76, 9, 35, 12, 18, 240, 14];

	static var hs = [24., 19, 6, 6, 28, 38, 30, 6, 36, 140, 19, 96, 197, 101, 23, 88, 96, 3, 101, 19, 101, 28, 6, 41, 96, 38, 6, 6, 24, 29, 28, 6, 96, 101, 28, 6, 23, 41, 132, 197, 19, 25, 19, 6, 23, 23, 24, 28, 15, 6, 28, 16, 15, 29, 19, 29, 25, 38, 6, 107, 101, 15, 50, 23, 6, 129, 15, 197, 15, 19, 28, 41, 94, 52, 7, 15, 6, 15, 34, 25, 29, 23, 100, 36, 94, 7, 32, 28, 12, 28, 152, 27, 19, 12, 61, 27, 24, 6, 23, 6, 6, 37, 23, 6, 152, 38, 28, 16, 15, 24, 197, 6, 27, 21, 132, 101, 28, 19, 38, 16, 28, 100, 24, 25, 96, 28, 129, 6, 6, 24, 6, 30, 25, 44, 15, 84, 197, 29, 6, 23, 27, 140, 23, 23, 23, 22, 6, 26, 28, 101, 16, 23, 458, 28, 6, 6, 27, 19, 30, 101, 37, 16, 28, 157, 6, 19, 25, 94, 28, 96, 6, 6, 19, 129, 38, 37, 24, 23, 16, 458, 19, 24, 28, 101, 28, 29, 6, 28, 6, 101, 5, 19, 6, 15, 24, 132, 197, 470, 149, 19, 21, 28, 15, 96, 29, 96, 23, 25, 6, 6, 12, 6, 26, 29, 107, 26, 6, 152, 41, 137, 6, 458, 23, 15, 6, 26, 6, 29, 6, 6, 197, 29, 34, 150, 197, 458, 14, 12, 28, 30, 23, 28, 101, 197, 6, 16, 29, 157, 6, 132, 6, 15, 197, 97, 6, 19, 23, 38, 19, 32, 27, 470, 24, 149, 25, 38, 37, 29, 28, 101, 28, 28, 101, 25, 101, 37, 458, 32, 15, 87, 6, 32, 152, 41, 19, 12, 96, 107, 15, 41, 97, 29, 28, 107, 29, 41, 7, 197, 107, 96, 136, 38, 24, 6, 23, 19, 96, 15, 33, 6, 6, 23, 19, 28, 41, 96, 16, 15, 38, 28, 197, 28, 29, 19, 13, 15, 29, 197, 15, 23, 19, 24, 6, 28, 197, 28, 28, 19, 23, 152, 6, 197, 28, 28, 27, 107, 96, 19, 6, 29, 6, 6, 29, 42, 6, 152, 23, 32, 41, 29, 10, 23, 24, 10, 61, 100, 9, 28, 101, 24, 6, 23, 197, 19, 101, 5, 28, 107, 41, 101, 16, 96, 15, 32, 96, 25, 22, 15, 197, 149, 152, 32, 19, 29, 140, 15, 7, 24, 20, 158, 6, 97, 24, 23, 23, 27, 101, 96, 19, 96, 6, 19, 37, 152, 28, 24, 32, 96, 19, 25, 33, 95, 5, 6, 24, 25, 29, 6, 28, 96, 30, 6, 197, 149, 7, 85, 28, 28, 101, 33, 458, 5, 24, 197, 28, 19, 19, 36, 28, 19, 29, 96, 152, 46, 29, 4, 29, 9, 24, 33, 19, 29, 24, 19, 6, 96, 16, 96, 197, 19, 96, 24, 197, 28, 6, 15, 129, 60, 25, 7, 24, 28, 27, 28, 61, 6, 16, 6, 29, 28, 28, 6, 19, 100, 61, 6, 16, 24, 197, 152, 101, 6, 157, 6, 16, 23, 26, 97, 137, 96, 6, 28, 28, 28, 28, 6, 6, 470, 46, 197, 30, 29, 24, 6, 32, 23, 44, 6, 32, 23, 28, 28, 6, 19, 197, 28, 27, 107, 6];
	
	
	static var passed = false;

	public static function main() {
		if ( !passed ) {
			var maxRects = new MaxRects( 2048, 2048 );
		//maxRects.batchInsert( ws, hs );
			var tStart = haxe.Timer.stamp();
		//for ( i in 0...ws.length ) maxRects.insert( ws[i], hs[i] );
			maxRects.batchInsert( ws, hs );
			var tEnd = haxe.Timer.stamp();
			passed = true;
			var maxOcc = 0.0;
			for ( i in 0...ws.length ) {
				maxOcc += ws[i] * hs[i];
			}
			
			var rects = maxRects.usedRectangles;
			
			for ( i in 0...rects.length-1 ) {
				var irect = rects[i];
				for ( j in i+1...rects.length ) {
					var jrect = rects[j];
					if ( irect.intersects( jrect )) {
						trace( "Rectangles intersect!", irect, jrect );
						return;
					}
				}
			}
			var all = ws.length;

			for ( rect in rects ) {
				ws.remove( rect.width );
				hs.remove( rect.height );
			}

			if ( ws.length > 0 || hs.length > 0 ) {
				var dr = all - rects.length;
				if ( dr == ws.length && dr == hs.length ) {
					trace( "Not all rectangles used! Not used:", dr );
				} else { 
					trace( "Wrong rectangles used!" );
				}
			 	trace( "Placed:", rects.length, "All:", all );
				trace( "Not used ws:", ws );
				trace( "Not used hs:", hs );	
			}

			trace( maxOcc );
			trace( 2048 * 2048 );
			trace( "Max occupancy %", maxOcc / (2048*2048.) );
			trace( "Occupancy %", maxRects.occupancy );
			trace( "Elasped sec.", tEnd - tStart );
		}
	}
}
